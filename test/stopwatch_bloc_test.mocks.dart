// Mocks generated by Mockito 5.0.5 from annotations
// in stopwatch/test/stopwatch_bloc_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:stopwatch/util/replicator.dart' as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeDuration extends _i1.Fake implements Duration {}

/// A class which mocks [Stopwatch].
///
/// See the documentation for Mockito's code generation for more information.
class MockStopwatch extends _i1.Mock implements Stopwatch {
  MockStopwatch() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get frequency =>
      (super.noSuchMethod(Invocation.getter(#frequency), returnValue: 0)
          as int);
  @override
  int get elapsedTicks =>
      (super.noSuchMethod(Invocation.getter(#elapsedTicks), returnValue: 0)
          as int);
  @override
  Duration get elapsed => (super.noSuchMethod(Invocation.getter(#elapsed),
      returnValue: _FakeDuration()) as Duration);
  @override
  int get elapsedMicroseconds => (super
          .noSuchMethod(Invocation.getter(#elapsedMicroseconds), returnValue: 0)
      as int);
  @override
  int get elapsedMilliseconds => (super
          .noSuchMethod(Invocation.getter(#elapsedMilliseconds), returnValue: 0)
      as int);
  @override
  bool get isRunning =>
      (super.noSuchMethod(Invocation.getter(#isRunning), returnValue: false)
          as bool);
  @override
  void start() => super.noSuchMethod(Invocation.method(#start, []),
      returnValueForMissingStub: null);
  @override
  void stop() => super.noSuchMethod(Invocation.method(#stop, []),
      returnValueForMissingStub: null);
  @override
  void reset() => super.noSuchMethod(Invocation.method(#reset, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [Replicator].
///
/// See the documentation for Mockito's code generation for more information.
class MockReplicator extends _i1.Mock implements _i2.Replicator {
  MockReplicator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void start(void Function()? callback) =>
      super.noSuchMethod(Invocation.method(#start, [callback]),
          returnValueForMissingStub: null);
  @override
  void stop() => super.noSuchMethod(Invocation.method(#stop, []),
      returnValueForMissingStub: null);
}
